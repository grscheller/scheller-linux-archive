#!/bin/bash
# shellcheck shell=bash
#
# Install Bash and Korn Shell environments
# as well as other config. files into home
# directory
#
# To use:
#    1. Make sure you know what you are doing,
#    2. Unless you are me, use this as a
#       template for your own version.
#    3. Run from the envConf directory.
#    4. Dot_Files get installed with their proper names
#       by this script.  The names used here help
#       vim plugin syntastic use shellcheck correctly
#       when editing them.
#

DOT_FILES='
    bash_logout.bash
    bashrc.bash
    env_init.ksh
    envrc.ksh
    inputrc
    kshrc.ksh
    profile.sh
'

RM_FILES='
    .bash_profile
    .vimrc
    bin/buArch
    bin/g3ScaleBG
    bin/g3SetBG
'

BIN_SCRIPTS='
    buGauss17
    digpath
    monitor
    path
    pathtrim
    rt
    spin
    viewJarManifest
'

## Back up existing dot-files in case things go wrong
#  and then remove the following files:
#    ~/.bash_profile  <- want bash to use ~/.profile 
#    ~/.vimrc         <- want  vim to use ~/.vim/vmrc
#
for File in $DOT_FILES
do
    File=".${File%.*}"
    diff ~/"$File" ~/"${File}.old" 2>&- >&-  && continue
    [[ ! -f ~/$File ]] ||
        cp ~/"$File" ~/"${File}.old" || {
        printf 'Error: Failed to backup previous ~/%s\n' "$File" >&2
        exit 1
    }
done

for File in $RM_FILES
do
    [[ ! -f ~/$File ]] || cp ~/"$File" ~/"${File}.old" || {
        printf 'Error: Failed to make backup copy of ~/%s,\n' "$File" >&2
        printf '       which was slated for removal.\n' >&2
        exit 1
    }
    [[ ! -f ~/$File ]] || rm ~/"$File" 2>&- ||
        printf 'Warning: Failed to remove old ~/%s\n' "$File" >&2
done

## Install home directory dot-files
for File in $DOT_FILES
do
    sed -n '4,$p' "${File}" > ~/".${File%.*}" ||
        printf 'Warning: Failed to install ~/%s\n' ".${File%.*}" >&2
    chmod u=rw,g=r,o= ~/".${File%.*}" || {
        printf 'Warning: Failed to set permissions' >&2
        printf ' on ~/%s to 640\n' ".${File%.*}"  >&2
    }
done

## Make sure ~/catch is there for the toSystem() shell function
[[ -d ~/catch ]] || mkdir ~/catch ||
    printf 'Warning: Failed to create ~/catch, do so manually' >&2

## Create ~/bin directory if necessary
[[ -d ~/bin ]] || mkdir ~/bin || {
    printf 'Error: Failed to create ~/bin' >&2
    exit 1
}
chmod u=rwx,g=rx,o= ~/bin ||
    printf 'Warning: Failed to set permissions on ~/bin to 750' >&2 

## Install ~/bin scripts
for File in $BIN_SCRIPTS
do
    cp bin/"$File" ~/bin ||
        printf 'Warning: Failed to install ~/bin/%s\n' "$File" >&2
    chmod u=rwx,g=rx,o= ~/bin/"$File" || {
        printf 'Warning: Failed to set permissions' >&2
        printf ' on ~/bin/%s to 750\n' "$File"      >&2
    }
done

## Install vimrc
[[ -d ~/.vim ]] || mkdir ~/.vim || {
    printf 'Error: Failed to create ~/.vim,'     >&2
    printf ' punting on installing ~/.vim/vimrc' >&2
    exit 1
}

[[ ! -f ~/.vim/vimrc ]] || mv ~/.vim/vimrc ~/.vim/vimrc.old || {
    printf 'Error: Failed backing up old ~/.vim/vimrc' >&2
    exit 1
}

[[ -d ~/.vim ]] && cp ./vim/vimrc ~/.vim ||
    printf 'Warning: Failed to install ~/.vim/vimrc' >&2

[[ -f ~/.vim/vimrc ]] && chmod u=rw,g=r,o= ~/.vim/vimrc ||
    printf 'Warning: Failed to set permissions on ~/vim/vimrc to 640' >&2 

