#!/bin/bash
#
# Resolve symlinks and print out the real path for each
# path given on the commandline.
#
# Usage: realPath /path/to/first/item another/path/to/second/item
#
# Purpose: To find the real locations of files and directories.
#
# Works well with whence,
#
#     realPath $(whence java javac scala python cc gcc ghc)
#

function follow() {
    echo "Need to implement similar to original realPath"
}

function check() {

  errorIP="realPath: ERROR: Insufficient Permitions along path to "
  errorBL="realPath: ERROR: Broken or circular symlinaks: "
  errorEx="realPath: ERROR: Does not exist: "

  Path="$1"

  # First take care of some edge cases
  [[ -h $Path ]] && [[ ! -e $Path ]] && echo -n "$errorBL" >&2 && return 1
  [[ ! -e $Path ]] && echo -n "$errorEx" >&2 && return 1

  if [[ -d $Path ]]
  then
      # Target exists and is a directory
      (
        if cd -P "$Path" 
        then
            # cd directly success
            pwd -P 
        else
            # cd directly failed
            if cd -P "$(dirname "$Path")"
            then
                # cd parent success - Recursion needed here???
                echo "$(pwd -P)/$(basename "$Path")"
            else
                # cd parent failed
                echo -n "$errorIP" >&2 && exit 1
            fi
        fi
      )
  else
      # Target exists and is not a directory
      (
        if cd -P "$(dirname "$Path" )"
        then
            # cd parent success
            BASENAME=$(basename "$Path")
            if [[ ! -h "$BASENAME" ]]
            then
                # Not a symlink
                echo "$(pwd -P)/$BASENAME"
            else
                # Recursion needed here!!!
                longLS="$(ls -l "$BASENAME")"
                echo "$(pwd -P)/${longLS#*-> }"
            fi
        else
            # cd parent failed
            echo -n "$errorIP" >&2 && exit 1
        fi
      )
  fi
}

for target in "$@"
do
    check "$target"  || echo "$target" >&2
done
