d2h () 
{ 
    echo "obase=16; $*" | bc
}
ev () 
{ 
    ( /usr/bin/evince "$@" &>/dev/null & )
}
ff () 
{ 
    ( /usr/bin/firefox "$@" &>/dev/null & )
}
fm () 
{ 
    local DiR="$1";
    [[ -n $DiR ]] || DiR="$PWD";
    if [[ $HOST =~ (Cygwin|MinGW|MSYS2) ]]; then
        explorer "$(cygpath -w "$DiR")";
    else
        xdg-open "$DiR";
    fi
}
fromSystem () 
{ 
    local system=$1;
    local port=$2;
    local user=$3;
    local hpc=$4;
    shift 4;
    local SCP;
    if [[ $hpc == 'no' ]]; then
        SCP=/usr/bin/scp;
    else
        SCP=scp;
    fi;
    local each;
    for each in "$@";
    do
        $SCP -P "${port}" -r "${user}@${system}:${each}" .;
    done
}
h2d () 
{ 
    echo "ibase=16; $*" | bc
}
lo () 
{ 
    ( /usr/bin/libreoffice & )
}
low () 
{ 
    ( /usr/bin/libreoffice --writer "$@" & )
}
module () 
{ 
    eval `/usr/bin/modulecmd bash $*`
}
declare -fx module
sshToSystem () 
{ 
    local system=$1;
    local port=$2;
    local user=$3;
    local hpc=$4;
    local SSH;
    if [[ $hpc == 'no' ]]; then
        SSH=/usr/bin/ssh;
    else
        SSH=ssh;
    fi;
    $SSH -p "${port}" "${user}@${system}"
}
tm () 
{ 
    if [[ $HOST =~ (Cygwin|MinGW|MSYS2) ]]; then
        ( mintty & );
    else
        if [[ -x /usr/bin/gnome-terminal ]]; then
            ( /usr/bin/gnome-terminal & );
        else
            ( /usr/bin/xterm & );
        fi;
    fi
}
toSystem () 
{ 
    local system=$1;
    local port=$2;
    local user=$3;
    local hpc=$4;
    shift 4;
    local SCP;
    if [[ $hpc == 'no' ]]; then
        SCP=/usr/bin/scp;
    else
        SCP=scp;
    fi;
    $SCP -P "${port}" -r "$@" "${user}@${system}:catch"
}
ud () 
{ 
    local upDir=../;
    if [[ $1 =~ ^[1-9][0-9]*$ ]]; then
        for ((ii = 1; ii < $1; ii++))
        do
            upDir=../$upDir;
        done;
    fi;
    cd $upDir || return
}
