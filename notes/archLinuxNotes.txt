Purpose: Document useful commands and factoids most of
         which can be done without root or sudo access.

Journal Control:
  For scanning journalctl output, some useful options,
    journalctl -f   # follows like tail -f
    journalctl -x   # augment log lines with explanation texts
    journalctl -b   # since last boot

  System maintenance,
    journalctl -p 3 -xb   # Look for high priority errors since last boot.

System Control:
  Poweroff or restart system (when other users not logged on),
    systemctl poweroff
    systemctl reboot

  System maintenance,
    systemctl --failed

Pacman:
  System maintenance:
    sudo pacman -Syu        # Upgrade system,
                            #   -y, --refresh:
                            #     download fresh package list
                            #     from servers defined inpacman.conf(5)
                            #   -u, --sysupgrade: 
                            #     upgrade all packages that are
                            #     out  of date
    sudo pacman -Syu <pkg>  # Install package <pkg> (recommended).
    sudo pacman -Syuw       # Download packages without installing.
    sudo pacman -S <pkg>    # Just install package.
    sudo -Rs <pkg>          # Uninstall package & dependencies
                            # not required by other packages.
                            #    -s, --recursive
    sudo -Rsc <pkg>         # Also remove packages dependng on <pkg>,
                            #    -c, --cascade
    sudo -Rsu <pkg1> <pkg2>         # Only remove targets not
                                    # required by other packages,
                                    #    -u, --uneeded
    sudo -R <pkg>                   # Remove a single package.
    sudo pacman -Rs $(pacman -Qdtq) # Uninstall unneeded packages

  Query (upstream) package DB:

  Query (local) package DB:
    pacman -Qdt    # List unneeded (orphan) packages
                   #    -d, --deps (restrict to packages
                   #       installed as dependencies of
                   #       other packages)
                   #    -t, --unrequired (restrict to
                   #       packages not requiruerd or
                   #       optionally required by other
                   #       packages)
                   #    -q, --quiet (show less information,
                   #       useful in scripts)
    pactree <pkg>      # Packages <pkg> depends on
    pactree -r <pkg>   # Packages depending on <pkg>

  Older stuff not yet migrated above:
  For querying installed packages,
    pacman -Qet   // List all explicitly installed packages
    pacman -Q     // List all installed packages
    pacman -Qi net-tools   // Get information on net-tools package
    pacman -Qlq tor  // List files associated with tor package
    pacman -Qmq      // List all foreign (usually AUR) packages
    pacman -Q | grep '^linux '   // Get Linux kernel version

  Find the package which owns a particular installed file,
    pacman -Qo /etc/profile

  Find the package (not necessarily installed) that owns a file.
    pacman -Fo /usr/bin/time
    sudo pacman -Fyo /usr/bin/time      // sometimes necessary

  Query orphan packages,
    pacman -Qtdq

  Find packages depending on a package
    pacman -Sii net-tools

  Find installed packages depending on an installed package
    pacman -Qii net-tools

  Pacman logs stored here
    /var/log/pacman.log

  To search for packages
    pacman -Ss regex   // search for terms in package database
    pacman -Qs regex   // search against the local database


Hostnamectl:
  Get info on an Arch System,
    $ hostnamectl
       Static hostname: gauss17
             Icon name: computer-laptop
               Chassis: laptop
            Machine ID: 89e16dfa61c542876d1da424b85a9cbb
               Boot ID: a28fe2b54d714a7bb6a4288ff91f2d9c
      Operating System: Arch Linux
                Kernel: Linux 4.10.1-1-ARCH
          Architecture: x86-64

Time management:
  To check if hardware clock is set to UTC time,

    $ sudo hwclock --debug
    hwclock from util-linux 2.31.1
    System Time: 1517255432.147819
    Trying to open: /dev/rtc0
    Using the rtc interface to the clock.
    Last drift adjustment done at 1498353865 seconds after 1969
    Last calibration done at 1498353865 seconds after 1969
    Hardware clock is on UTC time
    Assuming hardware clock is kept in UTC time.
    Waiting for clock tick...
    ...got clock tick
    Time read from Hardware Clock: 2018/01/29 19:50:33
    Hw clock time : 2018/01/29 19:50:33 = 1517255433 seconds since 1969
    Time since last adjustment is 18901568 seconds
    Calculated Hardware Clock drift is 0.000000 seconds
    2018-01-29 12:50:32.123321-0700

  this shows HW clock is kept in UTC time.
  Since I use the systemd-timesyncd client,

    $ timedatectl
                          Local time: Mon 2018-01-29 12:55:01 MST
                      Universal time: Mon 2018-01-29 19:55:01 UTC
                            RTC time: Mon 2018-01-29 19:55:01
                           Time zone: America/Denver (MST, -0700)
           System clock synchronized: yes
    systemd-timesyncd.service active: yes
                     RTC in local TZ: no

  Last line shows that HW clock, "real time clock," is not local time. 

  Reset the timezone to East Coast.
    $ timedatectl list-timezones | grep America/Ne
    America/New_York
    $ sudo timedatectl set-timezone America/New_York

Login Control:
    $ loginctl 
    SESSION  UID USER  SEAT  TTY 
          2 1000 geoff seat0 tty2
          4 1001 jb    seat0 tty3
          6 1000 geoff seat0 tty4
         c1  120 gdm   seat0 tty1
    4 sessions listed.
    
    $ loginctl show-session 2 -p Type
    Type=x11
    
    $ loginctl show-session 6 
    Id=6
    User=1000
    Name=geoff
    Timestamp=Sat 2019-04-06 00:36:20 MDT
    TimestampMonotonic=5250149214
    VTNr=4
    Seat=seat0
    TTY=tty4
    Remote=no
    Service=login
    Scope=session-6.scope
    Leader=4188
    Audit=6
    Type=tty
    Class=user
    Active=no
    State=online
    IdleHint=no
    IdleSinceHint=1554532580486666
    IdleSinceHintMonotonic=5249958238
    LockedHint=no

DNSUTILS replacements:
  No longer have nslookup, dig, and host.

  getent replaces nslookup -

    $ getent hosts 8.8.8.8
    8.8.8.8         google-public-dns-a.google.com

    $ getent hosts dns1.fast.net
    205.147.200.114 dns1.corp.fast.net dns1.fast.net

    $ getent hosts www.fast.net
    64.80.108.108   www.fast.net

    $ getent hosts www.google.comm; echo $?
    2

  From the core/ldns package, drill replaces dig, hosts.

    $ drill dns1.fast.net
    ;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 6512
    ;; flags: qr rd ra ; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0 
    ;; QUESTION SECTION:
    ;; dns1.fast.net.	IN	A
    
    ;; ANSWER SECTION:
    dns1.fast.net.	86400	IN	CNAME	dns1.corp.fast.net.
    dns1.corp.fast.net.	86400	IN	A	205.147.200.114
    
    ;; AUTHORITY SECTION:
    
    ;; ADDITIONAL SECTION:
    
    ;; Query time: 414 msec
    ;; SERVER: 192.168.0.1
    ;; WHEN: Thu Jul  6 17:54:18 2017
    ;; MSG SIZE  rcvd: 71

POSIX:
  Get linux kernel version:
    uname -r

  System maintenance,
    Look for errors in /var/log (some logs need root privs).
